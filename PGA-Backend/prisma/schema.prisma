generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Unidade {
  unidade_id    Int     @id @default(autoincrement())
  codigo_fnnn   String  @unique @db.VarChar(10)
  nome_completo String  @db.VarChar(255)
  ativo         Boolean @default(true)
  diretor_id    Int?    @unique
  endereco      String?  @db.VarChar(255)
  complemento   String?  @db.VarChar(255)
  bairro        String?  @db.VarChar(100)
  cidade        String?  @db.VarChar(100)
  uf            String?  @db.VarChar(2)
  cep           String?  @db.VarChar(10)
  telefone      String?  @db.VarChar(20)
  site          String?  @db.VarChar(255)
  criado_em     DateTime @default(now())
  atualizado_em DateTime @updatedAt
  criado_por   Int?
  atualizado_por Int?

  cursos        Curso[]
  pgas          PGA[]
  solicitacoesAcesso   SolicitacaoAcesso[]
  pessoas PessoaUnidade[]

  diretor       Pessoa? @relation("DiretorUnidade", fields: [diretor_id], references: [pessoa_id])
  criadoPor     Pessoa? @relation("UnidadeCriadaPor", fields: [criado_por], references: [pessoa_id])
  atualizadoPor Pessoa? @relation("UnidadeAtualizadaPor", fields: [atualizado_por], references: [pessoa_id])
}

model PGA {
  pga_id                    Int                   @id @default(autoincrement())
  unidade_id                Int
  ano                       Int
  versao                    String?               @db.VarChar(10)
  analise_cenario           String?
  data_elaboracao           DateTime?             @db.Date
  data_parecer_gpr          DateTime?             @db.Date
  status                    StatusPGA             @default(EmElaboracao)
  configuracoes_snapshot    Json?
  data_snapshot_criado      DateTime              @default(now())
  usuario_criacao_id        Int?
  ativo                     Boolean               @default(true)
  acoesCPA                  AcaoCPA[]
  acoesProjetos             AcaoProjeto[]
  unidade                   Unidade               @relation(fields: [unidade_id], references: [unidade_id])
  rotinas                   RotinaInstitucional[]
  situacoesProblemas        PGASituacaoProblema[]
  usuarioCriacao            Pessoa?               @relation("PGACriador", fields: [usuario_criacao_id], references: [pessoa_id])
}

model SituacaoProblema {
  situacao_id         Int                 @id @default(autoincrement())
  codigo_categoria    String              @db.VarChar(20)
  descricao           String
  fonte               String?             @db.VarChar(255)
  ativo               Boolean             @default(true)
  ordem               Int?

  criado_em           DateTime            @default(now())
  criado_por          Int?
  atualizado_em       DateTime            @updatedAt
  atualizado_por      Int?

  pgas                PGASituacaoProblema[]
  acoesProjetos       AcaoProjetoSituacaoProblema[]

  versoes             SituacaoProblemaVersao[]

  usuarioCriador      Pessoa?             @relation("SituacaoCriador", fields: [criado_por], references: [pessoa_id])
  usuarioAtualizador  Pessoa?             @relation("SituacaoAtualizador", fields: [atualizado_por], references: [pessoa_id])
  
  @@index([codigo_categoria])
  @@index([ativo])
  @@index([criado_em])
}

model EixoTematico {
  eixo_id             Int             @id @default(autoincrement())
  numero              Int             @unique
  nome                String          @db.VarChar(255)
  descricao           String?
  ativo               Boolean         @default(true)

  criado_em           DateTime        @default(now())
  criado_por          Int?
  atualizado_em       DateTime        @default(now())
  atualizado_por      Int?

  acoesProjetos       AcaoProjeto[]
  temas               Tema[]
  versoes             EixoTematicoVersao[]

  temaVersoes         TemaVersao[]
  
  usuarioCriador      Pessoa?         @relation("EixoCriador", fields: [criado_por], references: [pessoa_id])
  usuarioAtualizador  Pessoa?         @relation("EixoAtualizador", fields: [atualizado_por], references: [pessoa_id])
}

model PrioridadeAcao {
  prioridade_id       Int             @id @default(autoincrement())
  grau                Int             @unique
  descricao           String          @db.VarChar(255)
  tipo_gestao         String          @db.VarChar(100)
  detalhes            String?         @db.Text
  ativo               Boolean         @default(true)

  criado_em           DateTime        @default(now())
  criado_por          Int?
  atualizado_em       DateTime        @updatedAt
  atualizado_por      Int?
  
  acoesProjetos       AcaoProjeto[]

  versoes             PrioridadeAcaoVersao[]
  usuarioCriador      Pessoa?         @relation("PrioridadeCriador", fields: [criado_por], references: [pessoa_id])
  usuarioAtualizador  Pessoa?         @relation("PrioridadeAtualizador", fields: [atualizado_por], references: [pessoa_id])
}

model Tema {
  tema_id             Int             @id @default(autoincrement())
  tema_num            Int
  eixo_id             Int           
  descricao           String          @db.VarChar(255)
  ativo               Boolean         @default(true)

  criado_em           DateTime        @default(now())
  criado_por          Int?
  atualizado_em       DateTime        @default(now())
  atualizado_por      Int?
  
  eixo                EixoTematico    @relation(fields: [eixo_id], references: [eixo_id])
  acoesProjetos       AcaoProjeto[]

  versoes             TemaVersao[]
  usuarioCriador      Pessoa?         @relation("TemaCriador", fields: [criado_por], references: [pessoa_id])
  usuarioAtualizador  Pessoa?         @relation("TemaAtualizador", fields: [atualizado_por], references: [pessoa_id])

  @@unique([tema_num, eixo_id])
}

model AcaoProjeto {
  acao_projeto_id                        Int         @id @default(autoincrement())
  codigo_projeto                         String      @db.VarChar(20)
  nome_projeto                           String?      @db.VarChar(255)
  pga_id                                 Int
  eixo_id                                Int
  prioridade_id                          Int
  tema_id                                Int
  o_que_sera_feito                       String
  por_que_sera_feito                     String
  data_inicio                            DateTime?        @db.Date
  data_final                             DateTime?        @db.Date
  objetivos_institucionais_referenciados String?
  obrigatorio_inclusao                   Boolean          @default(false)
  obrigatorio_sustentabilidade           Boolean          @default(false)
  ativo                                  Boolean          @default(true)
  custo_total_estimado                   Decimal?        @db.Decimal(10, 2)
  fonte_recursos                         String?         @db.VarChar(255)
  eixo                                   EixoTematico     @relation(fields: [eixo_id], references: [eixo_id])
  tema                                   Tema             @relation(fields: [tema_id], references: [tema_id])
  pga                                    PGA              @relation(fields: [pga_id], references: [pga_id])
  prioridade                             PrioridadeAcao   @relation(fields: [prioridade_id], references: [prioridade_id])
  situacoesProblemas                     AcaoProjetoSituacaoProblema[]
  etapas                                 EtapaProcesso[]
  pessoas                                ProjetoPessoa[]

  @@index([codigo_projeto])
}

model Pessoa {
  pessoa_id            Int                   @id @default(autoincrement())
  nome                 String                @db.VarChar(255)
  email                String?               @unique @db.VarChar(255)
  nome_usuario         String?               @unique @db.VarChar(30)
  senha                String?               @db.VarChar(255)
  tipo_usuario         TipoUsuario
  cpf                  String?               @unique @db.VarChar(11)
  matricula           String?               @unique @db.VarChar(20)
  telefone             String?               @db.VarChar(20)
  ativo                Boolean               @default(true)
  
  criado_em            DateTime              @default(now())
  atualizado_em        DateTime              @updatedAt
  criado_por           Int?
  atualizado_por       Int?

  unidade_dirigida    Unidade?       @relation("DiretorUnidade")

  unidades PessoaUnidade[]
  cursos_coordenados   Curso[]
  projetos             ProjetoPessoa[]
  rotinas_participante RotinaParticipante[]

  pessoas_criadas     Pessoa[]        @relation("PessoaCriadaPor")
  pessoas_atualizadas Pessoa[]        @relation("PessoaAtualizadaPor")
  criados_por          Pessoa?        @relation("PessoaCriadaPor", fields: [criado_por], references: [pessoa_id])
  atualizados_por      Pessoa?        @relation("PessoaAtualizadaPor", fields: [atualizado_por], references: [pessoa_id])

  unidades_criadas         Unidade[]       @relation("UnidadeCriadaPor")
  unidades_atualizadas     Unidade[]       @relation("UnidadeAtualizadaPor")

  rotinas_responsaveis RotinaInstitucional[] @relation("ResponsavelRotina")
  pgasCriados                    PGA[]                        @relation("PGACriador")
  auditorias                     ConfiguracaoAuditoria[]
  situacoesProblemasCriadas      SituacaoProblema[]           @relation("SituacaoCriador")
  situacoesProblemasAtualizadas  SituacaoProblema[]           @relation("SituacaoAtualizador")
  eixosCriados                   EixoTematico[]               @relation("EixoCriador")
  eixosAtualizados               EixoTematico[]               @relation("EixoAtualizador")

  situacaoVersoesCriadas         SituacaoProblemaVersao[]     @relation("SituacaoVersaoCriador")
  eixoVersoesCriadas             EixoTematicoVersao[]         @relation("EixoVersaoCriador")
  prioridadeVersoesCriadas       PrioridadeAcaoVersao[]       @relation("PrioridadeVersaoCriador")
  temaVersoesCriadas             TemaVersao[]                 @relation("TemaVersaoCriador")
  entregavelVersoesCriadas       EntregavelVersao[]           @relation("EntregavelVersaoCriador")
  pessoaVersoesCriadas           PessoaVersao[]               @relation("PessoaVersaoCriador")
  pessoaVersoes                  PessoaVersao[]               @relation("PessoaVersao")

  prioridadesCriadas             PrioridadeAcao[]             @relation("PrioridadeCriador")
  prioridadesAtualizadas         PrioridadeAcao[]             @relation("PrioridadeAtualizador")
  temasCriados                   Tema[]                       @relation("TemaCriador")
  temasAtualizados               Tema[]                       @relation("TemaAtualizador")
  entregaveisCriados             EntregavelLinkSei[]          @relation("EntregavelCriador")
  entregaveisAtualizados         EntregavelLinkSei[]          @relation("EntregavelAtualizador")

  solicitacoesProcessadas  SolicitacaoAcesso[] @relation("ProcessadorSolicitacao")
}

model ProjetoPessoa {
  projeto_pessoa_id     Int            @id @default(autoincrement())
  acao_projeto_id       Int
  pessoa_id             Int
  papel                 PapelProjeto
  carga_horaria_semanal Int?
  tipo_vinculo_hae_id   Int?            
  ativo                 Boolean        @default(true)
  tipo_vinculo_hae      TipoVinculoHAE? @relation(fields: [tipo_vinculo_hae_id], references: [id])
  acaoProjeto           AcaoProjeto     @relation(fields: [acao_projeto_id], references: [acao_projeto_id])
  pessoa                Pessoa          @relation(fields: [pessoa_id], references: [pessoa_id])
}

model EtapaProcesso {
  etapa_id                   Int               @id @default(autoincrement())
  acao_projeto_id            Int
  descricao                  String
  entregavel_id              Int?            
  entregavel_link_sei        EntregavelLinkSei? @relation(fields: [entregavel_id], references: [entregavel_id])
  numero_ref                 String?           @db.VarChar(50)
  data_verificacao_prevista  DateTime?         @db.Date
  data_verificacao_realizada DateTime?         @db.Date
  status_verificacao         StatusVerificacao? @default(Pendente)
  ativo                      Boolean           @default(true)
  acaoProjeto                AcaoProjeto       @relation(fields: [acao_projeto_id], references: [acao_projeto_id])
  anexos                     Anexo[]
}

model Anexo {
  anexo_id                  Int             @id @default(autoincrement())
  etapa_processo_id         Int?            
  entregavel_id             Int
  item                      String          @db.VarChar(100)
  descricao                 String          @db.VarChar(255)
  quantidade                Int
  preco_unitario_estimado   Decimal         @db.Decimal(10, 2)
  preco_total_estimado      Decimal         @db.Decimal(10, 2)
  ativo                     Boolean         @default(true)
  criado_em                 DateTime        @default(now())
  atualizado_em             DateTime        @updatedAt
  
  etapaProcesso             EtapaProcesso?   @relation(fields: [etapa_processo_id], references: [etapa_id], onDelete: SetNull)
  entregavel                EntregavelLinkSei @relation(fields: [entregavel_id], references: [entregavel_id])

  @@index([etapa_processo_id])
  @@index([entregavel_id])
}

model EntregavelLinkSei {
  entregavel_id       Int               @id @default(autoincrement())
  entregavel_numero   String            @unique @db.VarChar(50)
  descricao           String            @db.VarChar(255)
  detalhes            String?           @db.VarChar(500)
  requer_anexo        Boolean           @default(false)
  ativo               Boolean           @default(true)

  criado_em           DateTime          @default(now())
  criado_por          Int?
  atualizado_em       DateTime          @default(now())
  atualizado_por      Int?
  
  etapas              EtapaProcesso[]
  anexos              Anexo[]

  versoes             EntregavelVersao[]
  usuarioCriador      Pessoa?           @relation("EntregavelCriador", fields: [criado_por], references: [pessoa_id])
  usuarioAtualizador  Pessoa?           @relation("EntregavelAtualizador", fields: [atualizado_por], references: [pessoa_id])
}

model AcaoCPA {
  acao_cpa_id   Int     @id @default(autoincrement())
  pga_id        Int
  descricao     String
  justificativa String?
  ativo         Boolean @default(true)
  pga           PGA     @relation(fields: [pga_id], references: [pga_id])
}

model RotinaInstitucional {
  rotina_id           Int                  @id @default(autoincrement())
  pga_id              Int
  curso_id            Int?
  tipo_rotina         TipoRotina
  titulo              String               @db.VarChar(255)
  descricao           String
  periodicidade       PeriodicidadeRotina
  data_inicio         DateTime?            @db.Date
  data_fim            DateTime?            @db.Date
  responsavel_id      Int
  entregavel_esperado String?
  status              StatusRotina         @default(Planejada)
  ativo               Boolean              @default(true)
  curso               Curso?               @relation(fields: [curso_id], references: [curso_id])
  pga                 PGA                  @relation(fields: [pga_id], references: [pga_id])
  responsavel         Pessoa               @relation("ResponsavelRotina", fields: [responsavel_id], references: [pessoa_id])
  ocorrencias         RotinaOcorrencia[]
  participantes       RotinaParticipante[]
}

model RotinaParticipante {
  rotina_participante_id Int                 @id @default(autoincrement())
  rotina_id              Int
  pessoa_id              Int
  papel                  String?             @db.VarChar(100)
  ativo                  Boolean             @default(true)
  pessoa                 Pessoa              @relation(fields: [pessoa_id], references: [pessoa_id])
  rotina                 RotinaInstitucional @relation(fields: [rotina_id], references: [rotina_id])
}

model RotinaOcorrencia {
  ocorrencia_id   Int                 @id @default(autoincrement())
  rotina_id       Int
  data_realizacao DateTime            @db.Date
  hora_inicio     DateTime?           @db.Time(6)
  hora_fim        DateTime?           @db.Time(6)
  local           String?             @db.VarChar(255)
  pauta           String?
  resultado       String?
  link_ata        String?             @db.VarChar(255)
  status          StatusOcorrencia    @default(Planejada)
  ativo           Boolean             @default(true)
  rotina          RotinaInstitucional @relation(fields: [rotina_id], references: [rotina_id])
}

model Curso {
  curso_id       Int                   @id @default(autoincrement())
  unidade_id     Int
  nome           String                @db.VarChar(255)
  tipo           TipoCurso
  status         StatusCurso
  coordenador_id Int?
  ativo          Boolean               @default(true)
  coordenador    Pessoa?               @relation(fields: [coordenador_id], references: [pessoa_id])
  unidade        Unidade               @relation(fields: [unidade_id], references: [unidade_id])
  rotinas        RotinaInstitucional[]
}

model TipoVinculoHAE {
  id                    Int             @id @default(autoincrement())
  sigla                 String          @unique @db.VarChar(10)
  descricao             String          @db.VarChar(255)
  detalhes              String?         @db.Text
  ativo                 Boolean         @default(true)
  projetos_pessoas      ProjetoPessoa[]
}

model PGASituacaoProblema {
  pga_id              Int
  situacao_problema_id Int
  ativo               Boolean         @default(true)
  pga                 PGA               @relation(fields: [pga_id], references: [pga_id])
  situacaoProblema    SituacaoProblema  @relation(fields: [situacao_problema_id], references: [situacao_id])
  
  @@id([pga_id, situacao_problema_id])
}

model AcaoProjetoSituacaoProblema {
  acao_projeto_id     Int
  situacao_problema_id Int
  ativo               Boolean         @default(true)
  acaoProjeto         AcaoProjeto       @relation(fields: [acao_projeto_id], references: [acao_projeto_id])
  situacaoProblema    SituacaoProblema  @relation(fields: [situacao_problema_id], references: [situacao_id])
  
  @@id([acao_projeto_id, situacao_problema_id])
}

enum StatusPGA {
  EmElaboracao
  Submetido
  Aprovado
  Reprovado
}

enum TipoUsuario {
  Administrador
  CPS
  Regional
  Diretor
  Coordenador
  Administrativo
  Docente
}

enum PapelProjeto {
  Responsavel
  Colaborador
}

enum StatusVerificacao {
  Pendente
  OK
  RequerAcao
}

enum TipoAnexo {
  MaterialPermanente
  MaterialConsumo
  ReagenteQuimico
  Livro
  Software
}

enum TipoRotina {
  CPA
  CEPE
  NDE
  ReuniaoPedagogica
  Planejamento
  AvaliacaoInstitucional
  AcompanhamentoAcademico
  Outro
}

enum PeriodicidadeRotina {
  Semanal
  Quinzenal
  Mensal
  Bimestral
  Semestral
  Anual
  SobDemanda
}

enum StatusRotina {
  Planejada
  EmAndamento
  Concluida
  Cancelada
}

enum StatusOcorrencia {
  Planejada
  Realizada
  Cancelada
  Adiada
}

enum TipoCurso {
  Tecnologico
  AMS
  Outro
}

enum StatusCurso {
  EmPlanejamento
  EmImplantacao
  Ativo
  Inativo
}

enum AnexoProjetoUm {
  Anexo1 @map("1")
  Anexo2 @map("2")  
  Anexo3 @map("3")
  Anexo4 @map("4")

}

model ConfiguracaoAuditoria {
  auditoria_id          Int                   @id @default(autoincrement())
  tabela                String                @db.VarChar(50)
  registro_id           Int
  ano                   Int
  operacao              TipoOperacaoAuditoria
  dados_antes           Json?
  dados_depois          Json?
  usuario_id            Int?
  data_operacao         DateTime              @default(now())
  motivo                String?               @db.Text
  usuario               Pessoa?               @relation(fields: [usuario_id], references: [pessoa_id])
  
  @@index([tabela, registro_id])
  @@index([ano])
  @@index([data_operacao])
}

model SituacaoProblemaVersao {
  versao_id           Int                 @id @default(autoincrement())
  situacao_base_id    Int
  ano                 Int
  codigo_categoria    String              @db.VarChar(20)
  descricao           String
  fonte               String?             @db.VarChar(255)
  ativo_no_ano        Boolean             @default(true)
  ordem               Int?
  criado_por          Int?
  criado_em           DateTime            @default(now())
  motivo_alteracao    String?             @db.Text

  situacaoBase        SituacaoProblema    @relation(fields: [situacao_base_id], references: [situacao_id])
  criador             Pessoa?             @relation("SituacaoVersaoCriador", fields: [criado_por], references: [pessoa_id])

  @@unique([situacao_base_id, ano])
  @@index([ano])
}

model EixoTematicoVersao {
  versao_id           Int                 @id @default(autoincrement())
  eixo_base_id        Int
  ano                 Int
  numero              Int
  nome                String              @db.VarChar(255)
  descricao           String?
  ativo_no_ano        Boolean             @default(true)
  criado_por          Int?
  criado_em           DateTime            @default(now())
  motivo_alteracao    String?             @db.Text
  
  eixoBase            EixoTematico        @relation(fields: [eixo_base_id], references: [eixo_id])
  criador             Pessoa?             @relation("EixoVersaoCriador", fields: [criado_por], references: [pessoa_id])
  
  @@unique([eixo_base_id, ano])
}

model PrioridadeAcaoVersao {
  versao_id           Int                 @id @default(autoincrement())
  prioridade_base_id  Int
  ano                 Int
  grau                Int
  descricao           String              @db.VarChar(255)
  tipo_gestao         String              @db.VarChar(100)
  detalhes            String?             @db.Text
  ativo_no_ano        Boolean             @default(true)
  criado_por          Int?
  criado_em           DateTime            @default(now())
  motivo_alteracao    String?             @db.Text
  
  prioridadeBase      PrioridadeAcao      @relation(fields: [prioridade_base_id], references: [prioridade_id])
  criador             Pessoa?             @relation("PrioridadeVersaoCriador", fields: [criado_por], references: [pessoa_id])
  
  @@unique([prioridade_base_id, ano])
}

model TemaVersao {
  versao_id           Int                 @id @default(autoincrement())
  tema_base_id        Int
  ano                 Int
  tema_num            Int
  eixo_id             Int
  descricao           String              @db.VarChar(255)
  ativo_no_ano        Boolean             @default(true)
  criado_por          Int?
  criado_em           DateTime            @default(now())
  motivo_alteracao    String?             @db.Text
  
  temaBase            Tema                @relation(fields: [tema_base_id], references: [tema_id])
  eixo                EixoTematico        @relation(fields: [eixo_id], references: [eixo_id])
  criador             Pessoa?             @relation("TemaVersaoCriador", fields: [criado_por], references: [pessoa_id])
  
  @@unique([tema_base_id, ano])
}

model EntregavelVersao {
  versao_id           Int                 @id @default(autoincrement())
  entregavel_base_id  Int
  ano                 Int
  entregavel_numero   String              @db.VarChar(50)
  descricao           String              @db.VarChar(255)
  detalhes            String?             @db.VarChar(500)
  ativo_no_ano        Boolean             @default(true)
  criado_por          Int?
  criado_em           DateTime            @default(now())
  motivo_alteracao    String?             @db.Text
  
  entregavelBase      EntregavelLinkSei   @relation(fields: [entregavel_base_id], references: [entregavel_id])
  criador             Pessoa?             @relation("EntregavelVersaoCriador", fields: [criado_por], references: [pessoa_id])
  
  @@unique([entregavel_base_id, ano])
}

model PessoaVersao {
  versao_id           Int                 @id @default(autoincrement())
  pessoa_base_id      Int
  ano                 Int
  nome                String              @db.VarChar(255)
  email               String?             @db.VarChar(255)
  tipo_usuario        TipoUsuario
  ativo_no_ano        Boolean             @default(true)
  criado_por          Int?
  criado_em           DateTime            @default(now())
  motivo_alteracao    String?             @db.Text
  
  pessoaBase          Pessoa              @relation("PessoaVersao", fields: [pessoa_base_id], references: [pessoa_id])
  criador             Pessoa?             @relation("PessoaVersaoCriador", fields: [criado_por], references: [pessoa_id])
  
  @@unique([pessoa_base_id, ano])
}

enum TipoOperacaoAuditoria {
  CREATE
  UPDATE  
  DELETE
  ACTIVATE
  DEACTIVATE
  SNAPSHOT_CREATED
}

model SolicitacaoAcesso {
  solicitacao_id       Int              @id @default(autoincrement())
  nome                 String           @db.VarChar(255)
  email                String           @db.VarChar(255)
  unidade_id           Int
  status               StatusSolicitacao @default(Pendente)
  data_solicitacao     DateTime         @default(now())
  data_processamento   DateTime?
  processado_por       Int?
  tipo_usuario_concedido TipoUsuario?
  
  unidade              Unidade          @relation(fields: [unidade_id], references: [unidade_id])
  processador          Pessoa?          @relation("ProcessadorSolicitacao", fields: [processado_por], references: [pessoa_id])
}

enum StatusSolicitacao {
  Pendente
  Aprovada
  Rejeitada
}

model PessoaUnidade {
  pessoa_id  Int
  unidade_id Int
  data_vinculo DateTime @default(now())
  ativo      Boolean @default(true)
  
  pessoa  Pessoa  @relation(fields: [pessoa_id], references: [pessoa_id], onDelete: Cascade)
  unidade Unidade @relation(fields: [unidade_id], references: [unidade_id], onDelete: Cascade)
  
  @@id([pessoa_id, unidade_id])
}
